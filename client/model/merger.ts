/**
 * Jenkins X
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ContextPolicy } from './contextPolicy';

/**
* Merger defines the options used to merge the PR
*/
export interface Merger {
    /**
    * BlockerLabel is an optional label that is used to identify merge blocking Git Provider issues. Leave this blank to disable this feature and save 1 API token per sync loop.
    */
    'blockerLabel'?: string;
    /**
    * MaxGoroutines is the maximum number of goroutines spawned inside the controller to handle org/repo:branch pools. Defaults to 20. Needs to be a positive number.
    */
    'maxGoroutines'?: number;
    /**
    * Override the default method of merge. Valid options are squash, rebase, and merge.
    */
    'mergeMethod'?: string;
    'policy'?: ContextPolicy;
    /**
    * PRStatusBaseURL is the base URL for the PR status page. This is used to link to a merge requirements overview in the status context.
    */
    'prStatusBaseUrl'?: string;
    /**
    * SquashLabel is an optional label that is used to identify PRs that should always be squash merged. Leave this blank to disable this feature.
    */
    'squashLabel'?: string;
    /**
    * URL for status contexts.
    */
    'targetUrl'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "blockerLabel",
            "baseName": "blockerLabel",
            "type": "string"
        },
        {
            "name": "maxGoroutines",
            "baseName": "maxGoroutines",
            "type": "number"
        },
        {
            "name": "mergeMethod",
            "baseName": "mergeMethod",
            "type": "string"
        },
        {
            "name": "policy",
            "baseName": "policy",
            "type": "ContextPolicy"
        },
        {
            "name": "prStatusBaseUrl",
            "baseName": "prStatusBaseUrl",
            "type": "string"
        },
        {
            "name": "squashLabel",
            "baseName": "squashLabel",
            "type": "string"
        },
        {
            "name": "targetUrl",
            "baseName": "targetUrl",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Merger.attributeTypeMap;
    }
}


/**
 * Jenkins X
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Brancher } from './brancher';
import { JobBase } from './jobBase';
import { ProtectionPolicies } from './protectionPolicies';
import { Query } from './query';
import { RegexpChangeMatcher } from './regexpChangeMatcher';
import { RepoContextPolicy } from './repoContextPolicy';

/**
* Presubmit defines a job configuration for pull requests
*/
export interface Presubmit {
    'brancher'?: Brancher;
    'jobBase'?: JobBase;
    'regexpChangeMatcher'?: RegexpChangeMatcher;
    /**
    * AlwaysRun automatically for every PR, or only when a comment triggers it. By default true.
    */
    'alwaysRun': boolean;
    /**
    * Context is the name of the Git Provider status context for the job.
    */
    'context': string;
    'contextOptions'?: RepoContextPolicy;
    /**
    * Override the default method of merge. Valid options are squash, rebase, and merge.
    */
    'mergeMethod'?: string;
    /**
    * Optional indicates that the job\'s status context should not be required for merge. By default false.
    */
    'optional'?: boolean;
    'policy'?: ProtectionPolicies;
    'query'?: Query;
    /**
    * Report enables reporting the job status on the git provider
    */
    'report'?: boolean;
    /**
    * The RerunCommand to give users. Must match Trigger. Trigger must also be specified if this field is specified. (Default: `/test <job name>`)
    */
    'rerunCommand': string;
    /**
    * Trigger is the regular expression to trigger the job. e.g. `@k8s-bot e2e test this` RerunCommand must also be specified if this field is specified. (Default: `(?m)^/test (?:.*? )?<job name>(?: .*?)?$`)
    */
    'trigger': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "brancher",
            "baseName": "Brancher",
            "type": "Brancher"
        },
        {
            "name": "jobBase",
            "baseName": "JobBase",
            "type": "JobBase"
        },
        {
            "name": "regexpChangeMatcher",
            "baseName": "RegexpChangeMatcher",
            "type": "RegexpChangeMatcher"
        },
        {
            "name": "alwaysRun",
            "baseName": "alwaysRun",
            "type": "boolean"
        },
        {
            "name": "context",
            "baseName": "context",
            "type": "string"
        },
        {
            "name": "contextOptions",
            "baseName": "context_options",
            "type": "RepoContextPolicy"
        },
        {
            "name": "mergeMethod",
            "baseName": "mergeMethod",
            "type": "string"
        },
        {
            "name": "optional",
            "baseName": "optional",
            "type": "boolean"
        },
        {
            "name": "policy",
            "baseName": "policy",
            "type": "ProtectionPolicies"
        },
        {
            "name": "query",
            "baseName": "query",
            "type": "Query"
        },
        {
            "name": "report",
            "baseName": "report",
            "type": "boolean"
        },
        {
            "name": "rerunCommand",
            "baseName": "rerunCommand",
            "type": "string"
        },
        {
            "name": "trigger",
            "baseName": "trigger",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Presubmit.attributeTypeMap;
    }
}

